// Build script for the Craxiom Network Survey Messaging library
//
// The user must have run the following commands to be able to publish a version to Sonatype Maven Central:
//   gradle addCredentials --key sonatypeUsername --value <username>
//   gradle addCredentials --key sonatypePassword --value <password>
//   gradle addCredentials --key sonatypeKeyPassword --value <password>
//
// From there, execute `./gradlew clean build publish` to build, sign, and upload all the artifacts.
// The final step is to log in to https://oss.sonatype.org/#stagingRepositories to close and release the staging repo

plugins {
    id 'idea'
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'com.google.protobuf' version '0.8.8'
    id 'nu.studer.credentials' version '1.0.7'
}

group 'com.craxiom'
version '0.2.0-SNAPSHOT'

// Configure the wrapper and ALL distro so IJ has additional context
wrapper {
    gradleVersion = '6.3'
    distributionType = Wrapper.DistributionType.ALL
}

repositories {
    mavenCentral()
    jcenter()
}

ext {
    grpcVersion = '1.28.1'
    protobufVersion = '3.11.4'
    protocVersion = protobufVersion

    sonatypeUsername = findCredentialValue('Username')
    sonatypePassword = findCredentialValue('Password')
    ext."signing.password" = findCredentialValue('KeyPassword')
}

dependencies {
    implementation "io.grpc:grpc-protobuf:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"

    implementation "com.google.protobuf:protobuf-java:$protobufVersion"

    //implementation "javax.annotation:javax.annotation-api:1.3.2"

    testImplementation "com.google.protobuf:protobuf-java-util:3.11.4"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protocVersion"
    }

    plugins {
        grpc_java { artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion" }
    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc_java {
                    outputSubDir = "java"
                }
            }
        }
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc
}

artifacts {
    archives javadocJar, sourceJar
}

// Configure publishing to the Sonatype Maven Central repo
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            pom {
                name = 'Network Survey Messaging'
                description = 'Protobuf and gRPC stubs for sending Wireless Protocol Survey messages\''
                url = 'https://github.com/christianrowlands/network-survey-messaging'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://github.com/christianrowlands/network-survey-messaging/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'christianrowlands'
                        name = 'Christian Rowlands'
                        email = 'christian.rowlands@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/christianrowlands/network-survey-messaging'
                    connection = 'scm:git:git://github.com/christianrowlands/network-survey-messaging.git'
                    developerConnection = 'scm:git:ssh://git@github.com:christianrowlands/network-survey-messaging.git'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/christianrowlands/network-survey-messaging/issues'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
        mavenLocal()
    }
}

signing {
    sign publishing.publications
}

/**
 * Try to locate a credential value (username or password) in the credentials store.
 *
 * @param value The suffix to use for the credential lookup key.  It will be appended to "sonatype".
 * @return The credential value if located.
 */
private String findCredentialValue(String value) {
    return project.credentials."sonatype$value"
}